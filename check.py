import torch
from transformers import RobertaTokenizer, RobertaForSequenceClassification

# Define the directory where your model files are saved
model_dir = "path_to_your_model_directory"  # Replace with the actual path to your model directory

# Load the tokenizer and model
tokenizer = RobertaTokenizer.from_pretrained(model_dir)
model = RobertaForSequenceClassification.from_pretrained(model_dir)

# Set the model to evaluation mode
model.eval()

# Example abstract
new_abstract = """by me Climate change modeling has greatly benefited from advances in machine learning, particularly in predicting long-term environmental trends. This paper provides a comprehensive analysis of how machine learning models are being used to simulate climate patterns and assess the impact of human activities on global ecosystems. We discuss key challenges, including data sparsity and model accuracy, while offering solutions for improving predictive capabilities in climate science research."""
# Tokenize the input
inputs = tokenizer(new_abstract, return_tensors='pt', padding=True, truncation=True)

# Perform inference
with torch.no_grad():
    outputs = model(**inputs)
    logits = outputs.logits
    probabilities = torch.softmax(logits, dim=1)

# Determine class
predicted_class = torch.argmax(probabilities, dim=1)

# Define a threshold for prediction
threshold = 0.6  # You can adjust this threshold based on your experiments
if probabilities[0][1].item() > threshold:
    print("This abstract is likely generated by AI.")
else:
    print("This abstract is likely written by a Human.")

